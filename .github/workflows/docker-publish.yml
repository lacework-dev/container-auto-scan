name: Docker Build/Scan/Push

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  release:
    types: [published]

jobs:
  docker_build:
    runs-on: ubuntu-latest
    env:
      LW_ACCESS_TOKEN: ${{ secrets.LW_ACCESS_TOKEN }}
      LW_ACCOUNT_NAME: ${{ secrets.LW_ACCOUNT_NAME }}
      LW_SCANNER_SAVE_RESULTS: true
      LW_SCANNER_SCAN_LIBRARY_PACKAGES: true
      DOCKER_REPO: alannix/container-auto-scan
      DOCKER_TEST_NAME: alannix/container-auto-scan-test
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Collect Docker Metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.DOCKER_REPO }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and Export to Docker
        uses: docker/build-push-action@v2
        with:
          context: .
          load: true
          tags: ${{ env.DOCKER_TEST_NAME }}

      - name: Download Lacework Scanner
        run: |
          curl -LJO https://github.com/lacework/lacework-vulnerability-scanner/releases/latest/download/lw-scanner-linux-amd64
          sudo mv lw-scanner-linux-amd64 lw-scanner
          sudo chmod +x lw-scanner

      - name: Lacework Image Assurance Scan
        run: |
          ./lw-scanner image evaluate ${DOCKER_TEST_NAME} latest --build-id ${{ github.run_id }}

      - name: Build and Publish to Docker
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
